{"version":3,"sources":["08-save-spritesheets.js"],"names":["readFileAsync","Promise","promisify","fs","readFile","test","beforeEach","t","context","opts","_","merge","logger","defaults","cssContents","ast","postcss","parse","from","images","spritesheets","spritePath","deepEqual","path","truthy","statAsync","retina","hooks","onSaveSpritesheet","pluginOpts","spritesheetGroups","join","throws","resolve","setTimeout"],"mappings":"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","file":"08-save-spritesheets.js","sourcesContent":["import test from 'ava';\nimport postcss from 'postcss';\nimport _ from 'lodash';\nimport Promise from 'bluebird';\nimport fs from 'fs-extra';\nimport path from 'path';\nimport {\n\tdefaults,\n\textractImages,\n\tprepareGroupBy,\n\tapplyGroupBy,\n\trunSpritesmith,\n\tsaveSpritesheets\n} from '../lib/core';\n\nconst readFileAsync = Promise.promisify(fs.readFile);\n\ntest.beforeEach((t) => {\n\tt.context.opts = _.merge({ logger() {} }, defaults);\n});\n\ntest('should save spritesheets', async (t) => {\n\tconst cssContents = await readFileAsync('./fixtures/basic/style.css');\n\tconst ast = postcss.parse(cssContents, { from: './fixtures/basic/style.css' });\n\tlet images, spritesheets, opts;\n\n\tt.context.opts.spritePath = './build/basic';\n\n\t[ opts, images ] = await extractImages(ast, t.context.opts);\n\t[ opts, images, spritesheets ] = await runSpritesmith(t.context.opts, images);\n\t[ opts, images, spritesheets ] = await saveSpritesheets(t.context.opts, images, spritesheets);\n\n\tt.deepEqual(spritesheets[0].path, 'build/basic/sprite.png');\n\tt.truthy(fs.statAsync('./build/basic/sprite.png'));\n});\n\ntest('should save SVG spritesheets', async (t) => {\n\tconst cssContents = await readFileAsync('./fixtures/svg-basic/style.css');\n\tconst ast = postcss.parse(cssContents, { from: './fixtures/svg-basic/style.css' });\n\tlet images, spritesheets, opts;\n\n\tt.context.opts.spritePath = './build/svg-basic';\n\n\tprepareGroupBy(t.context.opts);\n\t[ opts, images ] = await extractImages(ast, t.context.opts);\n\t[ opts, images ] = await applyGroupBy(t.context.opts, images);\n\t[ opts, images, spritesheets ] = await runSpritesmith(t.context.opts, images);\n\t[ opts, images, spritesheets ] = await saveSpritesheets(t.context.opts, images, spritesheets);\n\n\tt.deepEqual(spritesheets[0].path, 'build/svg-basic/sprite.svg');\n\tt.truthy(fs.statAsync('./build/svg-basic/sprite.svg'));\n});\n\ntest('should save spritesheets by groups', async (t) => {\n\tconst cssContents = await readFileAsync('./fixtures/retina/style.css');\n\tconst ast = postcss.parse(cssContents, { from: './fixtures/retina/style.css' });\n\tlet images, spritesheets, opts;\n\n\tt.context.opts.spritePath = './build/retina';\n\tt.context.opts.retina = true;\n\n\tprepareGroupBy(t.context.opts);\n\n\t[ opts, images ] = await extractImages(ast, t.context.opts);\n\t[ opts, images ] = await applyGroupBy(t.context.opts, images);\n\t[ opts, images, spritesheets ] = await runSpritesmith(t.context.opts, images);\n\t[ opts, images, spritesheets ] = await saveSpritesheets(t.context.opts, images, spritesheets);\n\n\tt.deepEqual(spritesheets[0].path, 'build/retina/sprite.png');\n\tt.deepEqual(spritesheets[1].path, 'build/retina/sprite.@2x.png');\n\tt.truthy(fs.statAsync('./build/retina/sprite.png'));\n\tt.truthy(fs.statAsync('./build/retina/sprite.@2x.png'));\n});\n\ntest('should use path provided by book', async (t) => {\n\tconst cssContents = await readFileAsync('./fixtures/basic/style.css');\n\tconst ast = postcss.parse(cssContents, { from: './fixtures/basic/style.css' });\n\tlet images, spritesheets, opts;\n\n\tt.context.opts.spritePath = './build/on-save-hook/';\n\tt.context.opts.hooks.onSaveSpritesheet = (pluginOpts, spritesheetGroups) => {\n\t\treturn path.join(pluginOpts.spritePath, 'custom-name.png');\n\t}\n\n\t[ opts, images ] = await extractImages(ast, t.context.opts);\n\t[ opts, images, spritesheets ] = await runSpritesmith(t.context.opts, images);\n\t[ opts, images, spritesheets ] = await saveSpritesheets(t.context.opts, images, spritesheets);\n\n\tt.deepEqual(spritesheets[0].path, 'build/on-save-hook/custom-name.png');\n\tt.truthy(fs.statAsync('./build/on-save-hook/custom-name.png'));\n});\n\ntest('should throw error if path is empty', async (t) => {\n\tconst cssContents = await readFileAsync('./fixtures/basic/style.css');\n\tconst ast = postcss.parse(cssContents, { from: './fixtures/basic/style.css' });\n\tlet images, spritesheets, opts;\n\n\tt.context.opts.spritePath = './build/on-save-hook/';\n\tt.context.opts.hooks.onSaveSpritesheet = (pluginOpts, spritesheetGroups) => {\n\t\treturn '';\n\t}\n\n\t[ opts, images ] = await extractImages(ast, t.context.opts);\n\t[ opts, images, spritesheets ] = await runSpritesmith(t.context.opts, images);\n\n\tt.throws(saveSpritesheets(t.context.opts, images, spritesheets));\n});\n\ntest('should use Promise result provided by book', async (t) => {\n\tconst cssContents = await readFileAsync('./fixtures/basic/style.css');\n\tconst ast = postcss.parse(cssContents, { from: './fixtures/basic/style.css' });\n\tlet images, spritesheets, opts;\n\n\tt.context.opts.spritePath = './build/on-save-hook/';\n\tt.context.opts.hooks.onSaveSpritesheet = (pluginOpts, spritesheetGroups) => {\n\t\treturn new Promise(( resolve ) => setTimeout(() => resolve(Promise.resolve(path.join(pluginOpts.spritePath, 'custom-name.png'))), 0));\n\t}\n\n\t[ opts, images ] = await extractImages(ast, t.context.opts);\n\t[ opts, images, spritesheets ] = await runSpritesmith(t.context.opts, images);\n\t[ opts, images, spritesheets ] = await saveSpritesheets(t.context.opts, images, spritesheets);\n\n\tt.deepEqual(spritesheets[0].path, 'build/on-save-hook/custom-name.png');\n\tt.truthy(fs.statAsync('./build/on-save-hook/custom-name.png'));\n});\n"]}