{"version":3,"sources":["11-e2e.js"],"names":["inputPath","expectedPath","opts","t","fs","readFileAsync","input","expected","processor","process","from","result","deepEqual","css","run","Promise","promisifyAll","stylesheetPath","spritePath","throws","retina","basePath","filterBy","image","url","indexOf","reject","resolve","groupBy","hooks","onSaveSpritesheet","groups","path","join","onUpdateRule","rule","token","insertAfter","postcss","decl","prop","value","spriteUrl"],"mappings":"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","file":"11-e2e.js","sourcesContent":["import test from 'ava';\nimport postcss from 'postcss';\nimport fs from 'fs-extra';\nimport Promise from 'bluebird';\nimport path from 'path';\nimport plugin from '../lib';\n\nPromise.promisifyAll(fs);\n\nasync function run(inputPath, expectedPath, opts, t) {\n\tconst input = await fs.readFileAsync(inputPath, 'utf8');\n\tconst expected = await fs.readFileAsync(expectedPath, 'utf8');\n\tconst processor = postcss([plugin(opts)]);\n\tconst result = await processor.process(input, { from: inputPath });\n\n\tt.deepEqual(result.css, expected);\n}\n\ntest('throws error', async (t) => {\n\tconst inputPath = './fixtures/error/style.css';\n\tconst opts = {\n\t\tstylesheetPath: './build/example-error/',\n\t\tspritePath: './build/example-error/',\n\t};\n\n\tconst input = await fs.readFileAsync(inputPath, 'utf8');\n\tconst processor = postcss([plugin(opts)]);\n\n\tt.throws(processor.process(input, { from: inputPath }));\n});\n\ntest('basic', async (t) => {\n\tconst inputPath = './fixtures/basic/style.css';\n\tconst expectedPath = './expectations/basic/style.css';\n\tconst opts = {\n\t\tstylesheetPath: './build/basic/',\n\t\tspritePath: './build/basic/'\n\t};\n\n\treturn run(inputPath, expectedPath, opts, t);\n});\n\ntest('basic SVG', async (t) => {\n\tconst inputPath = './fixtures/svg-basic/style.css';\n\tconst expectedPath = './expectations/svg-basic/style.css';\n\tconst opts = {\n\t\tstylesheetPath: './build/svg-basic/',\n\t\tspritePath: './build/svg-basic/'\n\t};\n\n\treturn run(inputPath, expectedPath, opts, t);\n});\n\ntest('retina', async (t) => {\n\tconst inputPath = './fixtures/retina/style.css';\n\tconst expectedPath = './expectations/retina/style.css';\n\tconst opts = {\n\t\tstylesheetPath: './build/retina/',\n\t\tspritePath: './build/retina/',\n\t\tretina: true\n\t};\n\n\treturn run(inputPath, expectedPath, opts, t);\n});\n\ntest('color', async (t) => {\n\tconst inputPath = './fixtures/color/style.css';\n\tconst expectedPath = './expectations/color/style.css';\n\tconst opts = {\n\t\tstylesheetPath: './build/color/',\n\t\tspritePath: './build/color/'\n\t};\n\n\treturn run(inputPath, expectedPath, opts, t);\n});\n\ntest('absolute path', async (t) => {\n\tconst inputPath = './fixtures/absolute/css/style.css';\n\tconst expectedPath = './expectations/absolute/style.css';\n\tconst opts = {\n\t\tbasePath: './fixtures/absolute/',\n\t\tstylesheetPath: './build/absolute/',\n\t\tspritePath: './build/absolute/'\n\t};\n\n\treturn run(inputPath, expectedPath, opts, t);\n});\n\ntest('relative path', async (t) => {\n\tconst inputPath = './fixtures/relative/style.css';\n\tconst expectedPath = './expectations/relative/style.css';\n\tconst opts = {\n\t\tspritePath: './build/relative/'\n\t};\n\n\treturn run(inputPath, expectedPath, opts, t);\n});\n\ntest('filter by', async (t) => {\n\tconst inputPath = './fixtures/filter-by/style.css';\n\tconst expectedPath = './expectations/filter-by/style.css';\n\tconst opts = {\n\t\tstylesheetPath: './build/filter-by/',\n\t\tspritePath: './build/filter-by/',\n\t\tfilterBy: (image) => {\n\t\t\tif (image.url.indexOf('square') === -1) {\n\t\t\t\treturn Promise.reject();\n\t\t\t}\n\n\t\t\treturn Promise.resolve();\n\t\t}\n\t};\n\n\treturn run(inputPath, expectedPath, opts, t);\n});\n\ntest('group by', async (t) => {\n\tconst inputPath = './fixtures/group-by/style.css';\n\tconst expectedPath = './expectations/group-by/style.css';\n\tconst opts = {\n\t\tstylesheetPath: './build/group-by/',\n\t\tspritePath: './build/group-by/',\n\t\tgroupBy: (image) => {\n\t\t\tif (image.url.indexOf('square') === -1 && image.url.indexOf('circle') === -1) {\n\t\t\t\treturn Promise.reject();\n\t\t\t}\n\n\t\t\treturn Promise.resolve('shapes');\n\t\t}\n\t};\n\n\treturn run(inputPath, expectedPath, opts, t);\n});\n\ntest('hooks', async (t) => {\n\tconst inputPath = './fixtures/hooks/style.css';\n\tconst expectedPath = './expectations/hooks/style.css';\n\tconst opts = {\n\t\tstylesheetPath: './build/hooks/',\n\t\tspritePath: './build/hooks/',\n\t\thooks: {\n\t\t\tonSaveSpritesheet: (opts, groups) => {\n\t\t\t\treturn path.join(opts.spritePath, ['shapes', ...groups, 'png'].join('.'));\n\t\t\t},\n\t\t\tonUpdateRule: (rule, token, image) => {\n\t\t\t\trule.insertAfter(token, postcss.decl({\n\t\t\t\t\tprop: 'background-image',\n\t\t\t\t\tvalue: `url(${image.spriteUrl})`\n\t\t\t\t}));\n\t\t\t}\n\t\t}\n\t};\n\n\treturn run(inputPath, expectedPath, opts, t);\n});\n"]}