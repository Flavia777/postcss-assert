'use strict';

var _index = require('/Users/zhangqian/Documents/flavia/postcss-assert/node_modules/babel-runtime/regenerator/index.js');

var _index2 = _interopRequireDefault(_index);

var _asyncToGenerator2 = require('/Users/zhangqian/Documents/flavia/postcss-assert/node_modules/babel-runtime/helpers/asyncToGenerator.js');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _powerAssertRecorder = function () { function PowerAssertRecorder() { this.captured = []; } PowerAssertRecorder.prototype._capt = function _capt(value, espath) { this.captured.push({ value: value, espath: espath }); return value; }; PowerAssertRecorder.prototype._expr = function _expr(value, source) { var capturedValues = this.captured; this.captured = []; return { powerAssertContext: { value: value, events: capturedValues }, source: source }; }; return PowerAssertRecorder; }();

var run = function () {
	var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_index2.default.mark(function _callee(inputPath, expectedPath, opts, t) {
		var _rec = new _powerAssertRecorder(),
		    _rec2 = new _powerAssertRecorder();

		var input, expected, processor, result;
		return _index2.default.wrap(function _callee$(_context) {
			while (1) {
				switch (_context.prev = _context.next) {
					case 0:
						_context.next = 2;
						return _fsExtra2.default.readFileAsync(inputPath, 'utf8');

					case 2:
						input = _context.sent;
						_context.next = 5;
						return _fsExtra2.default.readFileAsync(expectedPath, 'utf8');

					case 5:
						expected = _context.sent;
						processor = (0, _postcss2.default)([(0, _lib2.default)(opts)]);
						_context.next = 9;
						return processor.process(input, { from: inputPath });

					case 9:
						result = _context.sent;


						t.deepEqual(_rec._expr(_rec._capt(_rec._capt(result, 'arguments/0/object').css, 'arguments/0'), {
							content: 't.deepEqual(result.css, expected)',
							filepath: 'test/12-examples.js',
							line: 17,
							async: true
						}), _rec2._expr(_rec2._capt(expected, 'arguments/1'), {
							content: 't.deepEqual(result.css, expected)',
							filepath: 'test/12-examples.js',
							line: 17,
							async: true
						}));

					case 11:
					case 'end':
						return _context.stop();
				}
			}
		}, _callee, this);
	}));

	return function run(_x, _x2, _x3, _x4) {
		return _ref.apply(this, arguments);
	};
}();

var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _postcss = require('postcss');

var _postcss2 = _interopRequireDefault(_postcss);

var _fsExtra = require('fs-extra');

var _fsExtra2 = _interopRequireDefault(_fsExtra);

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _lib = require('../lib');

var _lib2 = _interopRequireDefault(_lib);

var _core = require('../lib/core');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_bluebird2.default.promisifyAll(_fsExtra2.default);

(0, _ava2.default)('filter by', function () {
	var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_index2.default.mark(function _callee2(t) {
		var inputPath, expectedPath, opts;
		return _index2.default.wrap(function _callee2$(_context2) {
			while (1) {
				switch (_context2.prev = _context2.next) {
					case 0:
						inputPath = './fixtures/example-filter-by/style.css';
						expectedPath = './expectations/example-filter-by/style.css';
						opts = {
							stylesheetPath: './build/example-filter-by/',
							spritePath: './build/example-filter-by/',
							filterBy: function filterBy(image) {
								if (!/\.png$/.test(image.url)) {
									return _bluebird2.default.reject();
								}

								return _bluebird2.default.resolve();
							}
						};
						return _context2.abrupt('return', run(inputPath, expectedPath, opts, t));

					case 4:
					case 'end':
						return _context2.stop();
				}
			}
		}, _callee2, undefined);
	}));

	return function (_x5) {
		return _ref2.apply(this, arguments);
	};
}());

(0, _ava2.default)('group by', function () {
	var _ref3 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_index2.default.mark(function _callee3(t) {
		var inputPath, expectedPath, opts;
		return _index2.default.wrap(function _callee3$(_context3) {
			while (1) {
				switch (_context3.prev = _context3.next) {
					case 0:
						inputPath = './fixtures/example-group-by/style.css';
						expectedPath = './expectations/example-group-by/style.css';
						opts = {
							stylesheetPath: './build/example-group-by/',
							spritePath: './build/example-group-by/',
							groupBy: function groupBy(image) {
								if (image.url.indexOf('shapes') === -1) {
									return _bluebird2.default.reject();
								}

								return _bluebird2.default.resolve('shapes');
							}
						};
						return _context3.abrupt('return', run(inputPath, expectedPath, opts, t));

					case 4:
					case 'end':
						return _context3.stop();
				}
			}
		}, _callee3, undefined);
	}));

	return function (_x6) {
		return _ref3.apply(this, arguments);
	};
}());

(0, _ava2.default)('output dimensions', function () {
	var _ref4 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_index2.default.mark(function _callee4(t) {
		var inputPath, expectedPath, opts;
		return _index2.default.wrap(function _callee4$(_context4) {
			while (1) {
				switch (_context4.prev = _context4.next) {
					case 0:
						inputPath = './fixtures/example-output-dimensions/style.css';
						expectedPath = './expectations/example-output-dimensions/style.css';
						opts = {
							stylesheetPath: './build/example-output-dimensions/',
							spritePath: './build/example-output-dimensions/',
							hooks: {
								onUpdateRule: function onUpdateRule(rule, token, image) {
									(0, _core.updateRule)(rule, token, image);

									['width', 'height'].forEach(function (prop) {
										rule.insertAfter(rule.last, _postcss2.default.decl({
											prop: prop,
											value: image.coords[prop] + 'px'
										}));
									});
								}
							}
						};
						return _context4.abrupt('return', run(inputPath, expectedPath, opts, t));

					case 4:
					case 'end':
						return _context4.stop();
				}
			}
		}, _callee4, undefined);
	}));

	return function (_x7) {
		return _ref4.apply(this, arguments);
	};
}());

(0, _ava2.default)('responsive spritesheets', function () {
	var _ref5 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_index2.default.mark(function _callee5(t) {
		var inputPath, expectedPath, opts;
		return _index2.default.wrap(function _callee5$(_context5) {
			while (1) {
				switch (_context5.prev = _context5.next) {
					case 0:
						inputPath = './fixtures/example-responsive-spritesheets/style.css';
						expectedPath = './expectations/example-responsive-spritesheets/style.css';
						opts = {
							stylesheetPath: './build/example-responsive-spritesheets/',
							spritePath: './build/example-responsive-spritesheets/',
							hooks: {
								onUpdateRule: function onUpdateRule(rule, token, image) {
									var backgroundSizeX = image.spriteWidth / image.coords.width * 100;
									var backgroundSizeY = image.spriteHeight / image.coords.height * 100;
									var backgroundPositionX = image.coords.x / (image.spriteWidth - image.coords.width) * 100;
									var backgroundPositionY = image.coords.y / (image.spriteHeight - image.coords.height) * 100;

									backgroundSizeX = isNaN(backgroundSizeX) ? 0 : backgroundSizeX;
									backgroundSizeY = isNaN(backgroundSizeY) ? 0 : backgroundSizeY;
									backgroundPositionX = isNaN(backgroundPositionX) ? 0 : backgroundPositionX;
									backgroundPositionY = isNaN(backgroundPositionY) ? 0 : backgroundPositionY;

									var backgroundImage = _postcss2.default.decl({
										prop: 'background-image',
										value: 'url(' + image.spriteUrl + ')'
									});

									var backgroundSize = _postcss2.default.decl({
										prop: 'background-size',
										value: backgroundSizeX + '% ' + backgroundSizeY + '%'
									});

									var backgroundPosition = _postcss2.default.decl({
										prop: 'background-position',
										value: backgroundPositionX + '% ' + backgroundPositionY + '%'
									});

									rule.insertAfter(token, backgroundImage);
									rule.insertAfter(backgroundImage, backgroundPosition);
									rule.insertAfter(backgroundPosition, backgroundSize);
								}
							}
						};
						return _context5.abrupt('return', run(inputPath, expectedPath, opts, t));

					case 4:
					case 'end':
						return _context5.stop();
				}
			}
		}, _callee5, undefined);
	}));

	return function (_x8) {
		return _ref5.apply(this, arguments);
	};
}());

(0, _ava2.default)('skip prefix', function () {
	var _ref6 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_index2.default.mark(function _callee6(t) {
		var inputPath, expectedPath, opts;
		return _index2.default.wrap(function _callee6$(_context6) {
			while (1) {
				switch (_context6.prev = _context6.next) {
					case 0:
						inputPath = './fixtures/example-skip-prefix/style.css';
						expectedPath = './expectations/example-skip-prefix/style.css';
						opts = {
							stylesheetPath: './build/example-skip-prefix/',
							spritePath: './build/example-skip-prefix/',
							hooks: {
								onSaveSpritesheet: function onSaveSpritesheet(opts, groups) {
									return _path2.default.join(opts.spritePath, 'shapes.png');
								}
							}
						};
						return _context6.abrupt('return', run(inputPath, expectedPath, opts, t));

					case 4:
					case 'end':
						return _context6.stop();
				}
			}
		}, _callee6, undefined);
	}));

	return function (_x9) {
		return _ref6.apply(this, arguments);
	};
}());
//# sourceMappingURL=../node_modules/.cache/ava/d5e616d0afde1c7af46c033fdab4c824.js.map