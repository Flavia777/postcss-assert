{"version":3,"sources":["12-examples.js"],"names":["inputPath","expectedPath","opts","t","fs","readFileAsync","input","expected","processor","process","from","result","deepEqual","css","run","Promise","promisifyAll","stylesheetPath","spritePath","filterBy","image","test","url","reject","resolve","groupBy","indexOf","hooks","onUpdateRule","rule","token","forEach","prop","insertAfter","last","postcss","decl","value","coords","backgroundSizeX","spriteWidth","width","backgroundSizeY","spriteHeight","height","backgroundPositionX","x","backgroundPositionY","y","isNaN","backgroundImage","spriteUrl","backgroundSize","backgroundPosition","onSaveSpritesheet","groups","path","join"],"mappings":"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","file":"12-examples.js","sourcesContent":["import test from 'ava';\nimport postcss from 'postcss';\nimport fs from 'fs-extra';\nimport Promise from 'bluebird';\nimport path from 'path';\nimport plugin from '../lib';\nimport { updateRule } from '../lib/core';\n\nPromise.promisifyAll(fs);\n\nasync function run(inputPath, expectedPath, opts, t) {\n\tconst input = await fs.readFileAsync(inputPath, 'utf8');\n\tconst expected = await fs.readFileAsync(expectedPath, 'utf8');\n\tconst processor = postcss([plugin(opts)]);\n\tconst result = await processor.process(input, { from: inputPath });\n\n\tt.deepEqual(result.css, expected);\n}\n\ntest('filter by', async (t) => {\n\tconst inputPath = './fixtures/example-filter-by/style.css';\n\tconst expectedPath = './expectations/example-filter-by/style.css';\n\tconst opts = {\n\t\tstylesheetPath: './build/example-filter-by/',\n\t\tspritePath: './build/example-filter-by/',\n\t\tfilterBy: (image) => {\n\t\t\tif (!/\\.png$/.test(image.url)) {\n\t\t\t\treturn Promise.reject();\n\t\t\t}\n\n\t\t\treturn Promise.resolve();\n\t\t}\n\t};\n\n\treturn run(inputPath, expectedPath, opts, t);\n});\n\ntest('group by', async (t) => {\n\tconst inputPath = './fixtures/example-group-by/style.css';\n\tconst expectedPath = './expectations/example-group-by/style.css';\n\tconst opts = {\n\t\tstylesheetPath: './build/example-group-by/',\n\t\tspritePath: './build/example-group-by/',\n\t\tgroupBy: (image) => {\n\t\t\tif (image.url.indexOf('shapes') === -1) {\n\t\t\t\treturn Promise.reject();\n\t\t\t}\n\n\t\t\treturn Promise.resolve('shapes');\n\t\t}\n\t};\n\n\treturn run(inputPath, expectedPath, opts, t);\n});\n\ntest('output dimensions', async (t) => {\n\tconst inputPath = './fixtures/example-output-dimensions/style.css';\n\tconst expectedPath = './expectations/example-output-dimensions/style.css';\n\tconst opts = {\n\t\tstylesheetPath: './build/example-output-dimensions/',\n\t\tspritePath: './build/example-output-dimensions/',\n\t\thooks: {\n\t\t\tonUpdateRule: (rule, token, image) => {\n\t\t\t\tupdateRule(rule, token, image);\n\n\t\t\t\t['width', 'height'].forEach((prop) => {\n\t\t\t\t\trule.insertAfter(rule.last, postcss.decl({\n\t\t\t\t\t\tprop,\n\t\t\t\t\t\tvalue: `${image.coords[prop]}px`\n\t\t\t\t\t}));\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\treturn run(inputPath, expectedPath, opts, t);\n});\n\ntest('responsive spritesheets', async (t) => {\n\tconst inputPath = './fixtures/example-responsive-spritesheets/style.css';\n\tconst expectedPath = './expectations/example-responsive-spritesheets/style.css';\n\tconst opts = {\n\t\tstylesheetPath: './build/example-responsive-spritesheets/',\n\t\tspritePath: './build/example-responsive-spritesheets/',\n\t\thooks: {\n\t\t\tonUpdateRule: (rule, token, image) => {\n\t\t\t\tlet backgroundSizeX = (image.spriteWidth / image.coords.width) * 100;\n\t            let backgroundSizeY = (image.spriteHeight / image.coords.height) * 100;\n\t            let backgroundPositionX = (image.coords.x / (image.spriteWidth - image.coords.width)) * 100;\n\t            let backgroundPositionY = (image.coords.y / (image.spriteHeight - image.coords.height)) * 100;\n\n\t            backgroundSizeX = isNaN(backgroundSizeX) ? 0 : backgroundSizeX;\n\t            backgroundSizeY = isNaN(backgroundSizeY) ? 0 : backgroundSizeY;\n\t            backgroundPositionX = isNaN(backgroundPositionX) ? 0 : backgroundPositionX;\n\t            backgroundPositionY = isNaN(backgroundPositionY) ? 0 : backgroundPositionY;\n\n\t            const backgroundImage = postcss.decl({\n\t                prop: 'background-image',\n\t                value: 'url(' + image.spriteUrl + ')'\n\t            });\n\n\t            const backgroundSize = postcss.decl({\n\t                prop: 'background-size',\n\t                value: backgroundSizeX + '% ' + backgroundSizeY + '%'\n\t            });\n\n\t            const backgroundPosition = postcss.decl({\n\t                prop: 'background-position',\n\t                value: backgroundPositionX + '% ' + backgroundPositionY + '%'\n\t            });\n\n\t            rule.insertAfter(token, backgroundImage);\n\t            rule.insertAfter(backgroundImage, backgroundPosition);\n\t            rule.insertAfter(backgroundPosition, backgroundSize);\n\t\t\t}\n\t\t}\n\t};\n\n\treturn run(inputPath, expectedPath, opts, t);\n});\n\ntest('skip prefix', async (t) => {\n\tconst inputPath = './fixtures/example-skip-prefix/style.css';\n\tconst expectedPath = './expectations/example-skip-prefix/style.css';\n\tconst opts = {\n\t\tstylesheetPath: './build/example-skip-prefix/',\n\t\tspritePath: './build/example-skip-prefix/',\n\t\thooks: {\n\t\t\tonSaveSpritesheet: (opts, groups) => {\n\t            return path.join(opts.spritePath, 'shapes.png');\n\t        }\n\t\t}\n\t};\n\n\treturn run(inputPath, expectedPath, opts, t);\n});\n"]}