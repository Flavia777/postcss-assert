'use strict';

var _index = require('/Users/zhangqian/Documents/flavia/postcss-assert/node_modules/babel-runtime/regenerator/index.js');

var _index2 = _interopRequireDefault(_index);

var _slicedToArray2 = require('/Users/zhangqian/Documents/flavia/postcss-assert/node_modules/babel-runtime/helpers/slicedToArray.js');

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _asyncToGenerator2 = require('/Users/zhangqian/Documents/flavia/postcss-assert/node_modules/babel-runtime/helpers/asyncToGenerator.js');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _powerAssertRecorder = function () { function PowerAssertRecorder() { this.captured = []; } PowerAssertRecorder.prototype._capt = function _capt(value, espath) { this.captured.push({ value: value, espath: espath }); return value; }; PowerAssertRecorder.prototype._expr = function _expr(value, source) { var capturedValues = this.captured; this.captured = []; return { powerAssertContext: { value: value, events: capturedValues }, source: source }; }; return PowerAssertRecorder; }();

var run = function () {
	var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_index2.default.mark(function _callee(input) {
		var root, opts, images, _ref2, _ref3, _ref4, _ref5;

		return _index2.default.wrap(function _callee$(_context) {
			while (1) {
				switch (_context.prev = _context.next) {
					case 0:
						root = _postcss2.default.parse(input, { from: '/tmp/test.css' });
						opts = _lodash2.default.merge({
							logger: function logger() {}
						}, _core.defaults);
						images = void 0;
						_context.next = 5;
						return (0, _core.extractImages)(root, opts);

					case 5:
						_ref2 = _context.sent;
						_ref3 = (0, _slicedToArray3.default)(_ref2, 2);
						opts = _ref3[0];
						images = _ref3[1];
						_context.next = 11;
						return (0, _core.setTokens)(root, opts, images);

					case 11:
						_ref4 = _context.sent;
						_ref5 = (0, _slicedToArray3.default)(_ref4, 3);
						root = _ref5[0];
						opts = _ref5[1];
						images = _ref5[2];
						return _context.abrupt('return', root);

					case 17:
					case 'end':
						return _context.stop();
				}
			}
		}, _callee, this);
	}));

	return function run(_x) {
		return _ref.apply(this, arguments);
	};
}();

var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _postcss = require('postcss');

var _postcss2 = _interopRequireDefault(_postcss);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _core = require('../lib/core');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _ava2.default)('should replace background declarations with comment tokens', function () {
	var _ref6 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_index2.default.mark(function _callee2(t) {
		var _rec = new _powerAssertRecorder(),
		    _rec2 = new _powerAssertRecorder();

		var input, expected, root;
		return _index2.default.wrap(function _callee2$(_context2) {
			while (1) {
				switch (_context2.prev = _context2.next) {
					case 0:
						input = '\n\t\t.selector-a { background-image: url(circle.png); }\n\t\t.selector-b { background: url(square.png) no-repeat 0 0; }\n\t';
						expected = '\n\t\t.selector-a { /* @replace|circle.png */ }\n\t\t.selector-b { /* @replace|square.png */ }\n\t';
						_context2.next = 4;
						return run(input);

					case 4:
						root = _context2.sent;


						t.deepEqual(_rec._expr(_rec._capt(_rec._capt(root, 'arguments/0/callee/object').toString(), 'arguments/0'), {
							content: 't.deepEqual(root.toString(), expected)',
							filepath: 'test/06-set-tokens.js',
							line: 28,
							async: true
						}), _rec2._expr(_rec2._capt(expected, 'arguments/1'), {
							content: 't.deepEqual(root.toString(), expected)',
							filepath: 'test/06-set-tokens.js',
							line: 28,
							async: true
						}));

					case 6:
					case 'end':
						return _context2.stop();
				}
			}
		}, _callee2, undefined);
	}));

	return function (_x2) {
		return _ref6.apply(this, arguments);
	};
}());

(0, _ava2.default)('should remove any background-repeat, background-size or background-position declarations', function () {
	var _ref7 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_index2.default.mark(function _callee3(t) {
		var _rec3 = new _powerAssertRecorder(),
		    _rec4 = new _powerAssertRecorder();

		var input, expected, root;
		return _index2.default.wrap(function _callee3$(_context3) {
			while (1) {
				switch (_context3.prev = _context3.next) {
					case 0:
						input = '\n\t\t.selector-a { background-image: url(circle.png); background-repeat: no-repeat; background-position: center center; }\n\t\t.selector-b { background: url(square.png) no-repeat 0 0; background-size: 100% 100%; }\n\t';
						expected = '\n\t\t.selector-a { /* @replace|circle.png */ }\n\t\t.selector-b { /* @replace|square.png */ }\n\t';
						_context3.next = 4;
						return run(input);

					case 4:
						root = _context3.sent;


						t.deepEqual(_rec3._expr(_rec3._capt(_rec3._capt(root, 'arguments/0/callee/object').toString(), 'arguments/0'), {
							content: 't.deepEqual(root.toString(), expected)',
							filepath: 'test/06-set-tokens.js',
							line: 42,
							async: true
						}), _rec4._expr(_rec4._capt(expected, 'arguments/1'), {
							content: 't.deepEqual(root.toString(), expected)',
							filepath: 'test/06-set-tokens.js',
							line: 42,
							async: true
						}));

					case 6:
					case 'end':
						return _context3.stop();
				}
			}
		}, _callee3, undefined);
	}));

	return function (_x3) {
		return _ref7.apply(this, arguments);
	};
}());
//# sourceMappingURL=../node_modules/.cache/ava/5e90d50cb78a11646517a4d9c9e0618f.js.map